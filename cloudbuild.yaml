steps:
  # 백엔드 빌드
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-f'
      - 'docker/dockerfile.backend'
      - '-t'
      - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/thefasthire-repo/backend:$COMMIT_SHA'
      - '.'
    env:
      # 민감하지 않은 설정들
      - 'OPENAI_CHAT_MODEL=gpt-4o-mini'
      - 'OPENAI_TTS_MODEL=gpt-4o-mini-tts'
      - 'OPENAI_TTS_VOICE=alloy'
      - 'OPENAI_TTS_FORMAT=mp3'
      - 'JWT_ALGORITHM=HS256'
      - 'ACCESS_TOKEN_EXPIRE_MINUTES=60'
      - 'MEDIA_DIR=./media'
      - 'GCS_BUCKET_NAME=fasthire-pdf-uploads'
      - 'DB_USER=dbuser'
      - 'DB_NAME=thefasthire'  # 실제 DB 이름으로 변경
      # 배포 환경 URL들
      - 'FRONTEND_ORIGIN=https://thefasthire.shop'
      - 'BACKEND_URL=https://api.thefasthire.shop'  # 실제 백엔드 URL
      - 'NEXT_PUBLIC_API_URL=https://api.thefasthire.shop'
    secretEnv:
      # Secret Manager에서 가져올 민감한 정보들
      - 'OPENAI_API_KEY'
      - 'JWT_SECRET_KEY'
      - 'DATABASE_URL'
      - 'DB_PASSWORD'
      - 'GOOGLE_CLOUD_PROJECT'
      - 'CLOUD_SQL_INSTANCE'

  # 프론트엔드 빌드
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-f'
      - 'docker/dockerfile.frontend'
      - '-t'
      - 'gcr.io/$PROJECT_ID/thefasthire-frontend:$COMMIT_SHA'
      # ✅ '--build-arg'를 사용하여 빌드 시점에 변수를 전달합니다.
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=https://api.thefasthire.shop'
      - '.'

      
# env: 블록은 삭제합니다.  # 백엔드 Cloud Run 배포
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'thefasthire-backend'
      - '--image'
      - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/thefasthire-repo/frontend:$COMMIT_SHA'
      - '--platform'
      - 'managed'
      - '--region'
      - 'asia-northeast3'
      - '--allow-unauthenticated'
      - '--port'
      - '8000'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--set-env-vars'
      - 'OPENAI_CHAT_MODEL=gpt-4o-mini,OPENAI_TTS_MODEL=gpt-4o-mini-tts,OPENAI_TTS_VOICE=alloy,OPENAI_TTS_FORMAT=mp3,JWT_ALGORITHM=HS256,ACCESS_TOKEN_EXPIRE_MINUTES=60,MEDIA_DIR=./media,GCS_BUCKET_NAME=fasthire-pdf-uploads,DB_USER=dbuser,DB_NAME=thefasthire,FRONTEND_ORIGIN=https://thefasthire.shop,EXTRA_ORIGINS=http://localhost:3000,BACKEND_URL=https://api.thefasthire.shop'
      - '--set-secrets'
      - 'OPENAI_API_KEY=openai-api-key:latest,JWT_SECRET_KEY=jwt-secret:latest,DATABASE_URL=database-url:latest'

  # 프론트엔드 Cloud Run 배포
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'thefasthire-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/thefasthire-frontend:$COMMIT_SHA'
      - '--platform'
      - 'managed'
      - '--region'
      - 'asia-northeast3'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'

# Secret Manager 연결
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/openai-api-key/versions/latest
      env: 'OPENAI_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/jwt-secret/versions/latest
      env: 'JWT_SECRET_KEY'
    - versionName: projects/$PROJECT_ID/secrets/database-url/versions/latest
      env: 'DATABASE_URL'
    - versionName: projects/$PROJECT_ID/secrets/db-password/versions/latest
      env: 'DB_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/google-cloud-project/versions/latest
      env: 'GOOGLE_CLOUD_PROJECT'
    - versionName: projects/$PROJECT_ID/secrets/cloud-sql-instance/versions/latest
      env: 'CLOUD_SQL_INSTANCE'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: 1200s

images:
  # ❗ 빌드 단계에서 사용한 태그와 정확히 일치해야 합니다.
  - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/thefasthire-repo/backend:$COMMIT_SHA'
  - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/thefasthire-repo/frontend:$COMMIT_SHA'
